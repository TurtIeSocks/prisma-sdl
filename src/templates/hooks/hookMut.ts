import type { Model, Extension } from '../../assets/types'

export function hookMut(model: Model, ext: Extension): string {
  return {
    'd.ts': `import type {
  MutationHookOptions,
  MutationTuple,
  DefaultContext,
  ApolloCache,
} from '@apollo/client'
import type { GqlQ${model.namePlural}, GqlM${model.namePlural} } from '../../../types'
export declare function useEdit${model.namePlural}(
  options: MutationHookOptions<GqlQ${model.namePlural}, GqlM${model.namePlural}>,
): MutationTuple<GqlQ${model.namePlural}, GqlM${model.namePlural}, DefaultContext, ApolloCache<any>>
`,
    js: `// Automatically generated by Prisma SDL
import { useMutation } from '@apollo/client'
import { EDIT_${model.screamingSnakePlural} } from '../../mutations'
export function useEdit${model.namePlural}(options) {
  return useMutation(EDIT_${model.screamingSnakePlural}, options)
}
`,
    ts: `import { useMutation } from '@apollo/client'
import type { MutationHookOptions, MutationTuple, DefaultContext, ApolloCache } from '@apollo/client'

import type { GqlQ${model.pascalPlural}, GqlM${model.pascalPlural} } from '../../../types'
import { EDIT_${model.screamingSnakePlural} } from '../../mutations'

export function useEdit${model.pascalPlural}(
  options: MutationHookOptions<GqlQ${model.pascalPlural}, GqlM${model.pascalPlural}>,
): MutationTuple<GqlQ${model.pascalPlural}, GqlM${model.pascalPlural}, DefaultContext, ApolloCache<any>> { 
  return useMutation<GqlQ${model.pascalPlural}, GqlM${model.pascalPlural}>(EDIT_${model.screamingSnakePlural}, options)
} 
`,
  }[ext]
}
