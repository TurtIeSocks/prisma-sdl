import type { Model, Extension } from '../../assets/types'

export function hookAll(model: Model, ext: Extension): string {
  return {
'd.ts': `import type { QueryHookOptions, QueryResult } from '@apollo/client'
import type { GqlQ${model.namePlural}, Gql${model.namePlural}Var } from '../../../types'
export declare function use${model.namePlural}(
  options: QueryHookOptions<GqlQ${model.namePlural}, Gql${model.namePlural}Var>,
): QueryResult<GqlQ${model.namePlural}, Gql${model.namePlural}Var>
`,
    js: `// Automatically generated by Prisma SDL
import { useQuery } from '@apollo/client'
import { ${model.screamingSnakePlural} } from '../../queryAll'
export function use${model.namePlural}(options) {
  return useQuery(${model.screamingSnakePlural}, options)
}
`,
    ts: `import { useQuery } from '@apollo/client'
import type { QueryHookOptions, QueryResult } from '@apollo/client'

import type { GqlQ${model.namePlural}, Gql${model.namePlural}Var } from '../../../types'
import { ${model.screamingSnakePlural} } from '../../queryAll'

export function use${model.namePlural}(
  options: QueryHookOptions<GqlQ${model.namePlural}, Gql${model.namePlural}Var>,
): QueryResult<GqlQ${model.namePlural}, Gql${model.namePlural}Var> {
  return useQuery<GqlQ${model.namePlural}, Gql${model.namePlural}Var>(${model.screamingSnakePlural}, options)
}
`,
  }[ext]
}
